// Generated by CoffeeScript 1.10.0
(function() {
  var app, express, metrics;

  express = require('express');

  app = express();

  metrics = require('./metrics');

  app.set('port', 1337);

  app.set('views', __dirname + "/../views");

  app.set('view engine', 'jade');

  app.use('/', express["static"](__dirname + "/../public"));

  app.use(require('body-parser')());

  app.get('/', function(req, res) {
    return res.render('index', {
      locals: {
        title: "My title could go here to be inserted in view"
      }
    });
  });

  app.get('/metrics.json', function(req, res) {
    return res.json(metrics.get());
  });

  app.get('/hello/:name', function(req, res) {
    return res.status(200).json(req.params.name);
  });

  app.get('/metric/:id.json', function(req, res) {
    return metrics.get(req.params.id, function(err, value) {
      if (err) {
        if (err.notFound) {
          res.status(404).json("Not found");
        }
        if (!err.notFound) {
          res.status(500).json(err);
        }
      }
      return res.status(200).json(value);
    });
  });

  app["delete"]('/metric/:id.json', function(req, res) {
    return metrics["delete"](req.params.id, function(err) {
      if (err) {
        res.status(500).json(err);
      }
      return res.status(200).send("Metrics deleted");
    });
  });

  app.post('/metric/:id.json', function(req, res) {
    return metrics.save(req.params.id, req.body, function(err) {
      if (err) {
        res.status(500).json(err);
      }
      return res.status(200).send("Metrics saved");
    });
  });

  app.listen(app.get('port'), function() {
    return console.log("listening on " + (app.get('port')));
  });

}).call(this);
